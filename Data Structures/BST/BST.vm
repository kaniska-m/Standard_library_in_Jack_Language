function BST.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
return
function BST.insert 2
push argument 0
pop pointer 0
push argument 1
call Node.new 1
pop local 0
push this 0
pop local 1
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push argument 1
push local 1
call Node.getValue 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Node.has_left 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Node.leftChild 1
pop local 1
goto IF_END1
label IF_FALSE1
push local 1
push local 0
call Node.setLeft 2
pop temp 0
push local 0
push local 1
call Node.setParent 2
pop temp 0
push local 1
push constant 0
not
call Node.set_has_left 2
pop temp 0
push constant 0
return
label IF_END1
goto IF_END0
label IF_FALSE0
push local 1
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
call Node.rightChild 1
pop local 1
goto IF_END2
label IF_FALSE2
push local 1
push local 0
call Node.setRight 2
pop temp 0
push local 0
push local 1
call Node.setParent 2
pop temp 0
push local 1
push constant 0
not
call Node.set_has_right 2
pop temp 0
push constant 0
return
label IF_END2
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BST.search 2
push argument 0
pop pointer 0
push this 0
pop local 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push argument 1
push local 0
call Node.getValue 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Node.has_left 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.leftChild 1
pop local 0
goto IF_END1
label IF_FALSE1
push constant 18
call String.new 1
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
return
label IF_END1
goto IF_END0
label IF_FALSE0
push local 0
call Node.getValue 1
push argument 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
return
goto IF_END2
label IF_FALSE2
push local 0
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Node.rightChild 1
pop local 0
goto IF_END3
label IF_FALSE3
push constant 18
call String.new 1
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
return
label IF_END3
label IF_END2
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 18
call String.new 1
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
return
function BST.delete 7
push argument 0
pop pointer 0
push pointer 0
push argument 1
call BST.search 2
pop local 0
push local 0
call Node.has_left 1
push constant 0
eq
push local 0
call Node.has_right 1
push constant 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE1
push local 0
call Node.overseer 1
pop local 3
push local 3
call Node.rightChild 1
push local 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 0
call Node.set_has_right 2
pop temp 0
goto IF_END2
label IF_FALSE2
push local 3
push constant 0
call Node.set_has_left 2
pop temp 0
label IF_END2
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
goto IF_END0
label IF_FALSE0
push local 0
pop local 1
push local 1
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
call Node.rightChild 1
pop local 1
label WHILE_EXP0
push local 1
call Node.has_left 1
push constant 0
not
eq
not
if-goto WHILE_END0
push local 1
call Node.leftChild 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
call Node.getValue 1
pop local 6
push local 0
push local 1
call Node.getValue 1
call Node.setValue 2
pop temp 0
push local 1
push local 6
call Node.setValue 2
pop temp 0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push local 0
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
call Node.overseer 1
pop local 3
push local 0
call Node.rightChild 1
pop local 4
push local 3
push local 0
call Node.rightChild 1
call Node.setLeft 2
pop temp 0
push local 4
push local 3
call Node.setParent 2
pop temp 0
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
goto IF_END4
label IF_FALSE4
push local 0
call Node.overseer 1
pop local 3
push local 3
call Node.rightChild 1
push local 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 3
push constant 0
call Node.set_has_right 2
pop temp 0
goto IF_END5
label IF_FALSE5
push local 3
push constant 0
call Node.set_has_left 2
pop temp 0
label IF_END5
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_END4
goto IF_END3
label IF_FALSE3
push local 0
push this 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
call Node.leftChild 1
pop this 0
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE6
push local 0
call Node.overseer 1
pop local 3
push local 0
call Node.leftChild 1
pop local 5
push local 3
call Node.rightChild 1
push local 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 3
push local 5
call Node.setRight 2
pop temp 0
goto IF_END7
label IF_FALSE7
push local 3
push local 5
call Node.setLeft 2
pop temp 0
label IF_END7
push local 5
push local 3
call Node.setParent 2
pop temp 0
push local 0
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_END3
label IF_END0
function BST.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BST.disposeTree 0
push argument 0
pop pointer 0
push argument 1
call Node.has_left 1
push constant 0
eq
push argument 1
call Node.has_right 1
push constant 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Output.println 0
pop temp 0
push constant 12
call String.new 1
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push argument 1
call Node.dispose 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
call Node.has_left 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push argument 1
call Node.leftChild 1
call BST.disposeTree 2
pop temp 0
label IF_FALSE1
push argument 1
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push argument 1
call Node.rightChild 1
call BST.disposeTree 2
pop temp 0
label IF_FALSE2
push constant 12
call String.new 1
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push argument 1
call Node.dispose 1
pop temp 0
push constant 0
return
function BST.inorder_print 0
push argument 0
call Node.has_left 1
push constant 0
eq
push argument 0
call Node.has_right 1
push constant 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Node.getValue 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
call Node.has_left 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Node.leftChild 1
call BST.inorder_print 1
pop temp 0
label IF_FALSE1
push argument 0
call Node.getValue 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Node.has_right 1
push constant 0
not
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Node.rightChild 1
call BST.inorder_print 1
pop temp 0
label IF_FALSE2
push constant 0
return
