function Hashtable.new 1
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
call List.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Hashtable.hash_function 1
push argument 0
pop pointer 0
push argument 1
push argument 1
push this 1
call Math.divide 2
push this 1
call Math.multiply 2
sub
pop local 0
push local 0
return
function Hashtable.get 4
push argument 0
pop pointer 0
push pointer 0
push argument 2
call Hashtable.hash_function 2
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call List.back 1
pop local 2
label WHILE_EXP0
push local 2
push local 3
call List.front 1
eq
not
not
if-goto WHILE_END0
push argument 1
push local 2
call Node.get_element 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
return
label IF_FALSE0
push local 2
call Node.get_next 1
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 3
push argument 1
push argument 2
call List.push_front 3
pop temp 0
push local 3
call List.front 1
return
function Hashtable.set 5
push argument 0
pop pointer 0
push pointer 0
push argument 3
call Hashtable.hash_function 2
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call List.back 1
pop local 2
label WHILE_EXP0
push local 2
push local 4
call List.front 1
eq
not
not
if-goto WHILE_END0
push argument 1
push local 2
call Node.get_element 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push argument 2
call Node.set_element 2
pop temp 0
push local 2
return
label IF_FALSE0
push local 2
call Node.get_next 1
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 15
call String.new 1
push constant 78
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 3
return
function Hashtable.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call List.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Hashtable.print 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call List.print 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
